/**
 * @file expose_metrics.h
 * @brief Programa para leer el uso de CPU y memoria y exponerlos como métricas de Prometheus.
 */

#include "metrics.h"
// #include "read_cpu_usage.h"
#include <errno.h>
#include <prom.h>
#include <promhttp.h>
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h> // Para sleep

/**
 * @brief Tamaño del buffer para leer líneas de los archivos.
 *
 * Se utiliza un tamaño de 256 bytes para leer líneas de los archivos en /proc.
 */
#define BUFFER_SIZE 256

/**
 * @brief Actualiza la métrica de uso de CPU.
 */
void update_cpu_gauge();

/**
 * @brief Actualiza la métrica de uso de memoria.
 */
void update_memory_gauge();

/**
 * @brief Actualiza la métrica de uso de memoria total.
 */
void update_memory_total_count();

/**
 * @brief Actualiza la métrica de lectura de Disco.
 */
void update_disk_read_count();

/**
 * @brief Actualiza la métrica de escritura de Disco.
 */
void update_disk_write_count();

/**
 * @brief Actualiza la métrica de recepcion de Red.
 */
void update_network_rx_count();

/**
 * @brief Actualiza la métrica de transmision de Red.
 */
void update_network_tx_count();

/**
 * @brief Actualiza la métrica de cantidad de procesos corriendo.
 */
void update_processes_gauge();

/**
 * @brief Actualiza la métrica de cantidad de cambios de contexto.
 */
void update_context_switches_count();

/**
 * @brief Función del hilo para exponer las métricas vía HTTP en el puerto 8000.
 * @param arg Argumento no utilizado.
 * @return NULL
 */
void* expose_metrics(void* arg);

/**
 * @brief Inicializar mutex y métricas.
 */
void init_metrics();

/**
 * @brief Destructor de mutex
 */
void destroy_mutex();